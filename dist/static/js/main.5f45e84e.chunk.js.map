{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/ProjectReducer.js","store/reducers/AuthReducer.js","store/reducers/RootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","ProjectReducer","action","AuthReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.5f45e84e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n\r\n    return (\r\n        <ul className=\"right\">\r\n                <li><NavLink to='/create'>New Project</NavLink></li>\r\n                <li><a onClick={props.signOut}>Log Out</a></li>\r\n                <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n                <li><NavLink to='/signup'>Signup</NavLink></li>\r\n                <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\nimport moment from 'moment'; // to format dates\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            }) }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        // console.log(this.props);\r\n        const { projects, auth, notifications } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = props => {\r\n    const { project, auth } = props; // get the project property from props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signIn: creds => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createProject: project => {dispatch(createProject(project))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(()=> {\r\n            dispatch({ type: 'CREATE_PROJECT', project });  \r\n        }).catch(err => {dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n    }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={ Dashboard } />\n            <Route path='/project/:id' component={ ProjectDetails } />\n            <Route path='/signin' component={ SignIn } />\n            <Route path='/signup' component={ SignUp } />\n            <Route path='/create' component={ CreateProject } />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst ProjectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ProjectReducer","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst AuthReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        \r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AuthReducer","import ProjectReducer from './ProjectReducer';\r\nimport AuthReducer from './AuthReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: AuthReducer,\r\n    project: ProjectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDCJ4aCW3Tq-5anSsKL92qtsypmPg9cX-k\",\r\n    authDomain: \"netninja-marioplan-50992.firebaseapp.com\",\r\n    databaseURL: \"https://netninja-marioplan-50992.firebaseio.com\",\r\n    projectId: \"netninja-marioplan-50992\",\r\n    storageBucket: \"netninja-marioplan-50992.appspot.com\",\r\n    messagingSenderId: \"880815326471\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({});\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware , compose} from 'redux';\nimport rootReducer from './store/reducers/RootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n  ) \n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );  \n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}